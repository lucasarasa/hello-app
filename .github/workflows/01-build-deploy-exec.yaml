name: Build, Push e Deploy com Versão Automática
run-name: Build e Push da Imagem Docker e Deploy Automático
description: Build e Push da Imagem Docker e Deploy Automático com base na mudança do arquivo

on:
  push:
    paths:
      - 'main.py'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Definir versão (v<numero de commits>) baseado na mudança do main.py
        run: |
          VERSION="v$(git log --pretty=oneline -- main.py | wc -l)"
          echo "IMAGE_TAG=$VERSION" >> $GITHUB_ENV
          echo "Versão da imagem gerada (main.py): $VERSION"

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build da imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-app:${{ env.IMAGE_TAG }} .

      - name: Push da imagem para o Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-app:${{ env.IMAGE_TAG }}

  update-manifest:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Clonar repo de manifests via SSH
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.MANIFEST_REPO }}
          path: manifests
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Listar arquivos do diretório manifests
        run: ls -l manifests
      
      - name: Atualizar arquivo de deployment com nova imagem
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/hello-app:${{ env.IMAGE_TAG }}|" manifests/manifests/deployment.yaml
          echo "Arquivo de deployment atualizado com a nova imagem."

      - name: Commit e criar Pull Request com nova imagem
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          title: "Atualiza deployment para imagem ${{ env.IMAGE_TAG }}"
          commit-message: "Atualiza imagem para ${{ env.IMAGE_TAG }}"
          base: main
          branch: update-image-${{ env.IMAGE_TAG }}
          path: manifests